library(plotly)
a_n <- c(1.6,3.6,5.5,3.7,1.3,5.6,7.3,8.8,2.5,6.9)
a_l <- c('a','a','c','b','c','j','s','h','b','j')
Name <- c('Juan','Pedro','Maria','Jose','Luis','Ana','Rosa','Carlos','Jorge','Luisa')
Subject <- c('Math','Biology','Chemistry','Math','Math','Biology','Chemistry','Math','Math','Biology')
Problem_1 <- c(5.5,9.5,4.0,4.5,3.0,6.5,5.0,9.5,4.0,7.5) #out of 10
Problem_2 <- c(0.45,0.90,0.60,0.75,0.30,0.25,0.40,0.85,0.60,0.65) #out of 1
Problem_3 <- c(35,85,70,85,30,45,30,75,13,55) #out of 100
Extra_Points <- c(2,0,2,3,0,1,0,1,1,1) #out of 3
Pass <- c(TRUE,TRUE,TRUE,TRUE,FALSE,FALSE,FALSE,TRUE,FALSE,TRUE)
df <- data.frame(Name,Subject,Problem_1,Problem_2,Problem_3,Extra_Points,Pass)
print('Array de numérico:')
a_n
print("String:")
a_l
print("Dataframe:")
df
print('Discretización por igual anchura')
discretizarEW(a_n,3,labels=F)
print('Discretización por igual frecuencia')
discretizarEF(a_n,3,labels = F)
print('Discretización por igual anchura')
discretizarEW(a_n,3,labels=T)
print('Discretización por igual frecuencia')
discretizarEF(a_n,3,labels = T)
df_ew = discretizarEW(df,3)
print(df_ew)
df_ef = discretizarEF(df,3)
print(df_ef)
print('Array:')
print(a_l)
print('Entropía:')
entropia(a_l)
print('Entropía')
print(entropia(df))
print('Array:')
print(a_n)
print('Varianza:')
varianza(a_n)
# Descomentar la siguiente linea para ver el error
# varianza(a_l)
print('Varianza:')
print(varianza(df))
a_n2 <- c(1.3,5.6,3.4,3.6,2.6,5.6,3.7,7.1,8.3,6.0)
print("Vector 1:")
a_n
print("Vector 2:")
a_n2
print("Covarianza:")
covarianza(a_n,a_n2)
print("Vector:")
a_n
print("Desviación típica:")
desviacion(a_n)
aux = aucf(df,'Problem_1','Pass')
tprl <- aux$tprl
fprl <- aux$fprl
auc <- aux$auc
print("True positive rate list:")
print(tprl)
print("False positive rate list:")
print(fprl)
print("AUC:")
print(auc)
source("functions/corr.R")
source("functions/discretizacion.R")
source("functions/filtrado.R")
source("functions/graficos.R")
source("functions/metricas.R")
source("functions/norm-est.R")
library(plotly)
a_n <- c(1.6,3.6,5.5,3.7,1.3,5.6,7.3,8.8,2.5,6.9)
a_l <- c('a','a','c','b','c','j','s','h','b','j')
Name <- c('Juan','Pedro','Maria','Jose','Luis','Ana','Rosa','Carlos','Jorge','Luisa')
Subject <- c('Math','Biology','Chemistry','Math','Math','Biology','Chemistry','Math','Math','Biology')
Problem_1 <- c(5.5,9.5,4.0,4.5,3.0,6.5,5.0,9.5,4.0,7.5) #out of 10
Problem_2 <- c(0.45,0.90,0.60,0.75,0.30,0.25,0.40,0.85,0.60,0.65) #out of 1
Problem_3 <- c(35,85,70,85,30,45,30,75,13,55) #out of 100
Extra_Points <- c(2,0,2,3,0,1,0,1,1,1) #out of 3
Pass <- c(TRUE,TRUE,TRUE,TRUE,FALSE,FALSE,FALSE,TRUE,FALSE,TRUE)
df <- data.frame(Name,Subject,Problem_1,Problem_2,Problem_3,Extra_Points,Pass)
print('Array de numérico:')
a_n
print("String:")
a_l
print("Dataframe:")
df
print('Discretización por igual anchura')
discretizarEW(a_n,3,labels=F)
print('Discretización por igual frecuencia')
discretizarEF(a_n,3,labels = F)
print('Discretización por igual anchura')
discretizarEW(a_n,3,labels=T)
print('Discretización por igual frecuencia')
discretizarEF(a_n,3,labels = T)
df_ew = discretizarEW(df,3)
print(df_ew)
df_ef = discretizarEF(df,3)
print(df_ef)
print('Array:')
print(a_l)
print('Entropía:')
entropia(a_l)
print('Entropía')
print(entropia(df))
print('Array:')
print(a_n)
print('Varianza:')
varianza(a_n)
# Descomentar la siguiente linea para ver el error
# varianza(a_l)
print('Varianza:')
print(varianza(df))
a_n2 <- c(1.3,5.6,3.4,3.6,2.6,5.6,3.7,7.1,8.3,6.0)
print("Vector 1:")
a_n
print("Vector 2:")
a_n2
print("Covarianza:")
covarianza(a_n,a_n2)
print("Vector:")
a_n
print("Desviación típica:")
desviacion(a_n)
aux = aucf(df,'Problem_1','Pass')
tprl <- aux$tprl
fprl <- aux$fprl
auc <- aux$auc
print("True positive rate list:")
print(tprl)
print("False positive rate list:")
print(fprl)
print("AUC:")
print(auc)
plot_roc_curve(tprl,fprl)
plot_roc_curve(tprl,fprl,zoom=T)
metricas(df,"Pass")
print("Vector:")
a_n
print("Vector normalizado:")
print(normalizar(a_n))
print(normalizar(df))
print("Vector:")
a_n
print("Vector estandarizado:")
print(estandarizar(a_n))
print(estandarizar(df))
source("functions/corr.R")
source("functions/discretizacion.R")
source("functions/filtrado.R")
source("functions/graficos.R")
source("functions/metricas.R")
source("functions/norm-est.R")
library(plotly)
a_n <- c(1.6,3.6,5.5,3.7,1.3,5.6,7.3,8.8,2.5,6.9)
a_l <- c('a','a','c','b','c','j','s','h','b','j')
Name <- c('Juan','Pedro','Maria','Jose','Luis','Ana','Rosa','Carlos','Jorge','Luisa')
Subject <- c('Math','Biology','Chemistry','Math','Math','Biology','Chemistry','Math','Math','Biology')
Problem_1 <- c(5.5,9.5,4.0,4.5,3.0,6.5,5.0,9.5,4.0,7.5) #out of 10
Problem_2 <- c(0.45,0.90,0.60,0.75,0.30,0.25,0.40,0.85,0.60,0.65) #out of 1
Problem_3 <- c(35,85,70,85,30,45,30,75,13,55) #out of 100
Extra_Points <- c(2,0,2,3,0,1,0,1,1,1) #out of 3
Pass <- c(TRUE,TRUE,TRUE,TRUE,FALSE,FALSE,FALSE,TRUE,FALSE,TRUE)
df <- data.frame(Name,Subject,Problem_1,Problem_2,Problem_3,Extra_Points,Pass)
print('Array de numérico:')
a_n
print("String:")
a_l
print("Dataframe:")
df
print('Discretización por igual anchura')
discretizarEW(a_n,3,labels=F)
print('Discretización por igual frecuencia')
discretizarEF(a_n,3,labels = F)
print('Discretización por igual anchura')
discretizarEW(a_n,3,labels=T)
print('Discretización por igual frecuencia')
discretizarEF(a_n,3,labels = T)
df_ew = discretizarEW(df,3)
print(df_ew)
df_ef = discretizarEF(df,3)
print(df_ef)
print('Array:')
print(a_l)
print('Entropía:')
entropia(a_l)
print('Entropía')
print(entropia(df))
print('Array:')
print(a_n)
print('Varianza:')
varianza(a_n)
# Descomentar la siguiente linea para ver el error
# varianza(a_l)
print('Varianza:')
print(varianza(df))
a_n2 <- c(1.3,5.6,3.4,3.6,2.6,5.6,3.7,7.1,8.3,6.0)
print("Vector 1:")
a_n
print("Vector 2:")
a_n2
print("Covarianza:")
covarianza(a_n,a_n2)
print("Vector:")
a_n
print("Desviación típica:")
desviacion(a_n)
aux = aucf(df,'Problem_1','Pass')
tprl <- aux$tprl
fprl <- aux$fprl
auc <- aux$auc
print("True positive rate list:")
print(tprl)
print("False positive rate list:")
print(fprl)
print("AUC:")
print(auc)
plot_roc_curve(tprl,fprl)
plot_roc_curve(tprl,fprl,zoom=T)
metricas(df,"Pass")
print("Vector:")
a_n
print("Vector normalizado:")
print(normalizar(a_n))
print(normalizar(df))
print("Vector:")
a_n
print("Vector estandarizado:")
print(estandarizar(a_n))
print(estandarizar(df))
#normalizamos el dataframe
df_n = normalizar(df)
df_n
entropia(df_n)
filtered_df = filtrar(df_n,Entropy = T ,condition = '<', value = 1.0)
filtered_df
varianza(filtered_df)
filtered_df = filtrar(filtered_df,Entropy = F ,condition = '>=', value = 0.117357)
filtered_df
aux = correlacion(df_n)
corr_pares = aux[[1]]
corr_mat = aux[[2]]
corr_pares
corr_mat
aux = informacion_mutua(df_n)
inf_pares = aux[[1]]
inf_mat = aux[[2]]
inf_pares
inf_mat
aux <- cor_mut(df_n)
cor <- aux[[1]]
mut <- aux[[2]]
mat <- aux[[3]]
print(cor)
print(mut)
print(mat)
plot_mat_heatmap(mat)
install.packages("reshape2")
library(reshape2)
plot_mat_heatmap(mat)
plot_mat_heatmap(mat)
source("functions/corr.R")
source("functions/discretizacion.R")
source("functions/filtrado.R")
source("functions/graficos.R")
source("functions/metricas.R")
source("functions/norm-est.R")
install.packages("reshape2")
source("functions/corr.R")
source("functions/discretizacion.R")
source("functions/filtrado.R")
source("functions/graficos.R")
source("functions/metricas.R")
source("functions/norm-est.R")
install.packages("plotly")
install.packages("reshape2")
install.packages("ggplot2")
a_n <- c(1.6,3.6,5.5,3.7,1.3,5.6,7.3,8.8,2.5,6.9)
a_l <- c('a','a','c','b','c','j','s','h','b','j')
Name <- c('Juan','Pedro','Maria','Jose','Luis','Ana','Rosa','Carlos','Jorge','Luisa')
Subject <- c('Math','Biology','Chemistry','Math','Math','Biology','Chemistry','Math','Math','Biology')
Problem_1 <- c(5.5,9.5,4.0,4.5,3.0,6.5,5.0,9.5,4.0,7.5) #out of 10
Problem_2 <- c(0.45,0.90,0.60,0.75,0.30,0.25,0.40,0.85,0.60,0.65) #out of 1
Problem_3 <- c(35,85,70,85,30,45,30,75,13,55) #out of 100
Extra_Points <- c(2,0,2,3,0,1,0,1,1,1) #out of 3
Pass <- c(TRUE,TRUE,TRUE,TRUE,FALSE,FALSE,FALSE,TRUE,FALSE,TRUE)
df <- data.frame(Name,Subject,Problem_1,Problem_2,Problem_3,Extra_Points,Pass)
source("functions/corr.R")
source("functions/discretizacion.R")
source("functions/filtrado.R")
source("functions/graficos.R")
source("functions/metricas.R")
source("functions/norm-est.R")
a_n <- c(1.6,3.6,5.5,3.7,1.3,5.6,7.3,8.8,2.5,6.9)
a_l <- c('a','a','c','b','c','j','s','h','b','j')
Name <- c('Juan','Pedro','Maria','Jose','Luis','Ana','Rosa','Carlos','Jorge','Luisa')
Subject <- c('Math','Biology','Chemistry','Math','Math','Biology','Chemistry','Math','Math','Biology')
Problem_1 <- c(5.5,9.5,4.0,4.5,3.0,6.5,5.0,9.5,4.0,7.5) #out of 10
Problem_2 <- c(0.45,0.90,0.60,0.75,0.30,0.25,0.40,0.85,0.60,0.65) #out of 1
Problem_3 <- c(35,85,70,85,30,45,30,75,13,55) #out of 100
Extra_Points <- c(2,0,2,3,0,1,0,1,1,1) #out of 3
Pass <- c(TRUE,TRUE,TRUE,TRUE,FALSE,FALSE,FALSE,TRUE,FALSE,TRUE)
df <- data.frame(Name,Subject,Problem_1,Problem_2,Problem_3,Extra_Points,Pass)
print('Array de numérico:')
a_n
print("String:")
a_l
print("Dataframe:")
df
print('Discretización por igual anchura')
discretizarEW(a_n,3,labels=F)
print('Discretización por igual frecuencia')
discretizarEF(a_n,3,labels = F)
print('Discretización por igual anchura')
discretizarEW(a_n,3,labels=T)
print('Discretización por igual frecuencia')
discretizarEF(a_n,3,labels = T)
df_ew = discretizarEW(df,3)
print(df_ew)
df_ef = discretizarEF(df,3)
print(df_ef)
print('Array:')
print(a_l)
print('Entropía:')
entropia(a_l)
print('Entropía')
print(entropia(df))
print('Array:')
print(a_n)
print('Varianza:')
varianza(a_n)
# Descomentar la siguiente linea para ver el error
# varianza(a_l)
print('Varianza:')
print(varianza(df))
a_n2 <- c(1.3,5.6,3.4,3.6,2.6,5.6,3.7,7.1,8.3,6.0)
print("Vector 1:")
a_n
print("Vector 2:")
a_n2
print("Covarianza:")
covarianza(a_n,a_n2)
print("Vector:")
a_n
print("Desviación típica:")
desviacion(a_n)
aux = aucf(df,'Problem_1','Pass')
tprl <- aux$tprl
fprl <- aux$fprl
auc <- aux$auc
print("True positive rate list:")
print(tprl)
print("False positive rate list:")
print(fprl)
print("AUC:")
print(auc)
plot_roc_curve(tprl,fprl)
plot_roc_curve(tprl,fprl,zoom=T)
metricas(df,"Pass")
print("Vector:")
a_n
print("Vector normalizado:")
print(normalizar(a_n))
print(normalizar(df))
print("Vector:")
a_n
print("Vector estandarizado:")
print(estandarizar(a_n))
print(estandarizar(df))
#normalizamos el dataframe
df_n = normalizar(df)
df_n
entropia(df_n)
filtered_df = filtrar(df_n,Entropy = T ,condition = '<', value = 1.0)
filtered_df
varianza(filtered_df)
filtered_df = filtrar(filtered_df,Entropy = F ,condition = '>=', value = 0.117357)
filtered_df
aux = correlacion(df_n)
corr_pares = aux[[1]]
corr_mat = aux[[2]]
corr_pares
corr_mat
aux = informacion_mutua(df_n)
inf_pares = aux[[1]]
inf_mat = aux[[2]]
inf_pares
inf_mat
aux <- cor_mut(df_n)
cor <- aux[[1]]
mut <- aux[[2]]
mat <- aux[[3]]
print(cor)
print(mut)
print(mat)
install.packages("reshape2")
install.packages("plotly")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("plotly")
source("functions/corr.R")
source("functions/discretizacion.R")
source("functions/filtrado.R")
source("functions/graficos.R")
source("functions/metricas.R")
source("functions/norm-est.R")
a_n <- c(1.6,3.6,5.5,3.7,1.3,5.6,7.3,8.8,2.5,6.9)
a_l <- c('a','a','c','b','c','j','s','h','b','j')
Name <- c('Juan','Pedro','Maria','Jose','Luis','Ana','Rosa','Carlos','Jorge','Luisa')
Subject <- c('Math','Biology','Chemistry','Math','Math','Biology','Chemistry','Math','Math','Biology')
Problem_1 <- c(5.5,9.5,4.0,4.5,3.0,6.5,5.0,9.5,4.0,7.5) #out of 10
Problem_2 <- c(0.45,0.90,0.60,0.75,0.30,0.25,0.40,0.85,0.60,0.65) #out of 1
Problem_3 <- c(35,85,70,85,30,45,30,75,13,55) #out of 100
Extra_Points <- c(2,0,2,3,0,1,0,1,1,1) #out of 3
Pass <- c(TRUE,TRUE,TRUE,TRUE,FALSE,FALSE,FALSE,TRUE,FALSE,TRUE)
df <- data.frame(Name,Subject,Problem_1,Problem_2,Problem_3,Extra_Points,Pass)
print('Array de numérico:')
a_n
print("String:")
a_l
print("Dataframe:")
df
print('Discretización por igual anchura')
discretizarEW(a_n,3,labels=F)
print('Discretización por igual frecuencia')
discretizarEF(a_n,3,labels = F)
print('Discretización por igual anchura')
discretizarEW(a_n,3,labels=T)
print('Discretización por igual frecuencia')
discretizarEF(a_n,3,labels = T)
df_ew = discretizarEW(df,3)
print(df_ew)
df_ef = discretizarEF(df,3)
print(df_ef)
print('Array:')
print(a_l)
print('Entropía:')
entropia(a_l)
print('Entropía')
print(entropia(df))
print('Array:')
print(a_n)
print('Varianza:')
varianza(a_n)
# Descomentar la siguiente linea para ver el error
# varianza(a_l)
print('Varianza:')
print(varianza(df))
a_n2 <- c(1.3,5.6,3.4,3.6,2.6,5.6,3.7,7.1,8.3,6.0)
print("Vector 1:")
a_n
print("Vector 2:")
a_n2
print("Covarianza:")
covarianza(a_n,a_n2)
print("Vector:")
a_n
print("Desviación típica:")
desviacion(a_n)
aux = aucf(df,'Problem_1','Pass')
tprl <- aux$tprl
fprl <- aux$fprl
auc <- aux$auc
print("True positive rate list:")
print(tprl)
print("False positive rate list:")
print(fprl)
print("AUC:")
print(auc)
plot_roc_curve(tprl,fprl)
plot_roc_curve(tprl,fprl,zoom=T)
metricas(df,"Pass")
print("Vector:")
a_n
print("Vector normalizado:")
print(normalizar(a_n))
print(normalizar(df))
print("Vector:")
a_n
print("Vector estandarizado:")
print(estandarizar(a_n))
print(estandarizar(df))
#normalizamos el dataframe
df_n = normalizar(df)
df_n
entropia(df_n)
filtered_df = filtrar(df_n,Entropy = T ,condition = '<', value = 1.0)
filtered_df
varianza(filtered_df)
filtered_df = filtrar(filtered_df,Entropy = F ,condition = '>=', value = 0.117357)
filtered_df
aux = correlacion(df_n)
corr_pares = aux[[1]]
corr_mat = aux[[2]]
corr_pares
install.packages("ggplot2")
corr_mat
aux = informacion_mutua(df_n)
inf_pares = aux[[1]]
inf_mat = aux[[2]]
inf_pares
inf_mat
aux <- cor_mut(df_n)
cor <- aux[[1]]
mut <- aux[[2]]
mat <- aux[[3]]
print(cor)
print(mut)
print(mat)
install.packages("plotly")
install.packages("reshape2")
plot_mat_heatmap(mat)
